//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.28010.2016
// 
namespace HappyTails_admin.HappyTailsServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInformation", Namespace="http://schemas.datacontract.org/2004/07/WebShopService")]
    public partial class ProductInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AnimalCategoryField;
        
        private System.Nullable<int> BalanceField;
        
        private string BrandField;
        
        private string ColorField;
        
        private string DescriptionField;
        
        private System.Nullable<decimal> HeightField;
        
        private int IdField;
        
        private string ImagePathField;
        
        private System.Nullable<decimal> LengthField;
        
        private string NameField;
        
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnimalCategory {
            get {
                return this.AnimalCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AnimalCategoryField, value) != true)) {
                    this.AnimalCategoryField = value;
                    this.RaisePropertyChanged("AnimalCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerInformation", Namespace="http://schemas.datacontract.org/2004/07/WebShopService")]
    public partial class CustomerInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailField;
        
        private string FirstnameField;
        
        private int IdField;
        
        private string PasswordField;
        
        private string StreetField;
        
        private string SurnameField;
        
        private string UsernameField;
        
        private System.Nullable<int> ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseInformation", Namespace="http://schemas.datacontract.org/2004/07/WebShopService")]
    public partial class PurchaseInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CustomerIdField;
        
        private int IdField;
        
        private System.Nullable<int> NumberOfProductsField;
        
        private System.Nullable<System.DateTime> PurchaseDateField;
        
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfProducts {
            get {
                return this.NumberOfProductsField;
            }
            set {
                if ((this.NumberOfProductsField.Equals(value) != true)) {
                    this.NumberOfProductsField = value;
                    this.RaisePropertyChanged("NumberOfProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PurchaseDate {
            get {
                return this.PurchaseDateField;
            }
            set {
                if ((this.PurchaseDateField.Equals(value) != true)) {
                    this.PurchaseDateField = value;
                    this.RaisePropertyChanged("PurchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HappyTailsServiceRef.IHappyTailsService")]
    public interface IHappyTailsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/GetAllProducts", ReplyAction="http://tempuri.org/IHappyTailsService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.ProductInformation>> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/AddProduct", ReplyAction="http://tempuri.org/IHappyTailsService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(HappyTails_admin.HappyTailsServiceRef.ProductInformation newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/EditProduct", ReplyAction="http://tempuri.org/IHappyTailsService/EditProductResponse")]
        System.Threading.Tasks.Task EditProductAsync(HappyTails_admin.HappyTailsServiceRef.ProductInformation product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/DeleteProduct", ReplyAction="http://tempuri.org/IHappyTailsService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/GetAllCustomers", ReplyAction="http://tempuri.org/IHappyTailsService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.CustomerInformation>> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/AddCustomer", ReplyAction="http://tempuri.org/IHappyTailsService/AddCustomerResponse")]
        System.Threading.Tasks.Task AddCustomerAsync(HappyTails_admin.HappyTailsServiceRef.CustomerInformation newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/EditCustomer", ReplyAction="http://tempuri.org/IHappyTailsService/EditCustomerResponse")]
        System.Threading.Tasks.Task EditCustomerAsync(HappyTails_admin.HappyTailsServiceRef.CustomerInformation customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/DeleteCustomer", ReplyAction="http://tempuri.org/IHappyTailsService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/AddPurchase", ReplyAction="http://tempuri.org/IHappyTailsService/AddPurchaseResponse")]
        System.Threading.Tasks.Task AddPurchaseAsync(HappyTails_admin.HappyTailsServiceRef.PurchaseInformation newPurchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/GetTotalPrice", ReplyAction="http://tempuri.org/IHappyTailsService/GetTotalPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalPriceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHappyTailsService/GetPurchasesFromCustomer", ReplyAction="http://tempuri.org/IHappyTailsService/GetPurchasesFromCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.PurchaseInformation>> GetPurchasesFromCustomerAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHappyTailsServiceChannel : HappyTails_admin.HappyTailsServiceRef.IHappyTailsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HappyTailsServiceClient : System.ServiceModel.ClientBase<HappyTails_admin.HappyTailsServiceRef.IHappyTailsService>, HappyTails_admin.HappyTailsServiceRef.IHappyTailsService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HappyTailsServiceClient() : 
                base(HappyTailsServiceClient.GetDefaultBinding(), HappyTailsServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IHappyTailsService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HappyTailsServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(HappyTailsServiceClient.GetBindingForEndpoint(endpointConfiguration), HappyTailsServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HappyTailsServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HappyTailsServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HappyTailsServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HappyTailsServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HappyTailsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.ProductInformation>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public System.Threading.Tasks.Task AddProductAsync(HappyTails_admin.HappyTailsServiceRef.ProductInformation newProduct) {
            return base.Channel.AddProductAsync(newProduct);
        }
        
        public System.Threading.Tasks.Task EditProductAsync(HappyTails_admin.HappyTailsServiceRef.ProductInformation product) {
            return base.Channel.EditProductAsync(product);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.CustomerInformation>> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public System.Threading.Tasks.Task AddCustomerAsync(HappyTails_admin.HappyTailsServiceRef.CustomerInformation newCustomer) {
            return base.Channel.AddCustomerAsync(newCustomer);
        }
        
        public System.Threading.Tasks.Task EditCustomerAsync(HappyTails_admin.HappyTailsServiceRef.CustomerInformation customer) {
            return base.Channel.EditCustomerAsync(customer);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public System.Threading.Tasks.Task AddPurchaseAsync(HappyTails_admin.HappyTailsServiceRef.PurchaseInformation newPurchase) {
            return base.Channel.AddPurchaseAsync(newPurchase);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalPriceAsync(int id) {
            return base.Channel.GetTotalPriceAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyTails_admin.HappyTailsServiceRef.PurchaseInformation>> GetPurchasesFromCustomerAsync(int id) {
            return base.Channel.GetPurchasesFromCustomerAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHappyTailsService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHappyTailsService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:11333/HappyTailsService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return HappyTailsServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IHappyTailsService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return HappyTailsServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IHappyTailsService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IHappyTailsService,
        }
    }
}
